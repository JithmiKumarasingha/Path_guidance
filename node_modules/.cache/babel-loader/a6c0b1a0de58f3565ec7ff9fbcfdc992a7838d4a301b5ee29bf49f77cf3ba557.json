{"ast":null,"code":"const API_BASE_URL = 'https://jsonplaceholder.typicode.com';\nexport const apiService = {\n  async fetchUsers() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/users`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch users');\n      }\n      const users = await response.json();\n      return users.slice(0, 10); // Return only first 10 users\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["API_BASE_URL","apiService","fetchUsers","response","fetch","ok","Error","users","json","slice","error","console"],"sources":["C:/Users/jithm/Documents/api-pro-website/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'https://jsonplaceholder.typicode.com';\r\n\r\nexport const apiService = {\r\n  async fetchUsers() {\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/users`);\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch users');\r\n      }\r\n      const users = await response.json();\r\n      return users.slice(0, 10); // Return only first 10 users\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n      throw error;\r\n    }\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAG,sCAAsC;AAE3D,OAAO,MAAMC,UAAU,GAAG;EACxB,MAAMC,UAAUA,CAAA,EAAG;IACjB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,QAAQ,CAAC;MACrD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MACA,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACnC,OAAOD,KAAK,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}